{"ast":null,"code":"import React from\"react\";import{useAuth}from\"../context/AuthContext\";import styles from\"../css/Card.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";const Card=props=>{const{isLoggedIn}=useAuth();if(props.id===\"login\"){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.card,\" \").concat(styles.nonBlurred),children:props.children});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.card,\" \").concat(isLoggedIn?styles.nonBlurred:styles.blurred),children:props.children});}};export default Card;","map":{"version":3,"names":["React","useAuth","styles","jsx","_jsx","Card","props","isLoggedIn","id","className","concat","card","nonBlurred","children","blurred"],"sources":["/Users/tjwns3481/Desktop/workspace/autoSourcing/client/src/components/Card.jsx"],"sourcesContent":["import React from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport styles from \"../css/Card.module.css\";\n\nconst Card = (props) => {\n  const { isLoggedIn } = useAuth();\n\n  if (props.id === \"login\") {\n    return (\n      <div className={`${styles.card} ${styles.nonBlurred}`}>\n        {props.children}\n      </div>\n    );\n  } else {\n    return (\n      <div\n        className={`${styles.card} ${\n          isLoggedIn ? styles.nonBlurred : styles.blurred\n        }`}\n      >\n        {props.children}\n      </div>\n    );\n  }\n};\n\nexport default Card;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,wBAAwB,CAChD,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,IAAI,CAAIC,KAAK,EAAK,CACtB,KAAM,CAAEC,UAAW,CAAC,CAAGN,OAAO,CAAC,CAAC,CAEhC,GAAIK,KAAK,CAACE,EAAE,GAAK,OAAO,CAAE,CACxB,mBACEJ,IAAA,QAAKK,SAAS,IAAAC,MAAA,CAAKR,MAAM,CAACS,IAAI,MAAAD,MAAA,CAAIR,MAAM,CAACU,UAAU,CAAG,CAAAC,QAAA,CACnDP,KAAK,CAACO,QAAQ,CACZ,CAAC,CAEV,CAAC,IAAM,CACL,mBACET,IAAA,QACEK,SAAS,IAAAC,MAAA,CAAKR,MAAM,CAACS,IAAI,MAAAD,MAAA,CACvBH,UAAU,CAAGL,MAAM,CAACU,UAAU,CAAGV,MAAM,CAACY,OAAO,CAC9C,CAAAD,QAAA,CAEFP,KAAK,CAACO,QAAQ,CACZ,CAAC,CAEV,CACF,CAAC,CAED,cAAe,CAAAR,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}