{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import styles from\"../css/Card.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";const Card=props=>{const[isLoggedIn,setIsLoggedIn]=useState(false);useEffect(()=>{// 페이지 로드 시 바로 토큰 유효성 검사 실행\ncheckTokenValidity();// 이후 5분마다 토큰 유효성 검사 반복\nconst interval=setInterval(()=>{checkTokenValidity();},300000);// 5분마다\nreturn()=>clearInterval(interval);},[]);// 빈 의존성 배열은 컴포넌트 마운트 시 1회 실행을 의미\nconst checkTokenValidity=async()=>{try{const response=await axios.get(\"/verify-token\",{headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))}});if(response.status===200){setIsLoggedIn(true);}else{setIsLoggedIn(false);localStorage.removeItem(\"token\");}}catch(error){console.error(\"Token validation error\",error);setIsLoggedIn(false);localStorage.removeItem(\"token\");}};if(props.id===\"login\"){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.card,\" \").concat(styles.nonBlurred),children:props.children});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.card,\" \").concat(isLoggedIn?styles.nonBlurred:styles.blurred),children:props.children});}};export default Card;","map":{"version":3,"names":["React","useEffect","useState","axios","styles","jsx","_jsx","Card","props","isLoggedIn","setIsLoggedIn","checkTokenValidity","interval","setInterval","clearInterval","response","get","headers","Authorization","concat","localStorage","getItem","status","removeItem","error","console","id","className","card","nonBlurred","children","blurred"],"sources":["/Users/tjwns3481/Desktop/workspace/autoSourcing/client/src/components/Card.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"../css/Card.module.css\";\n\nconst Card = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // 페이지 로드 시 바로 토큰 유효성 검사 실행\n    checkTokenValidity();\n\n    // 이후 5분마다 토큰 유효성 검사 반복\n    const interval = setInterval(() => {\n      checkTokenValidity();\n    }, 300000); // 5분마다\n\n    return () => clearInterval(interval);\n  }, []); // 빈 의존성 배열은 컴포넌트 마운트 시 1회 실행을 의미\n\n  const checkTokenValidity = async () => {\n    try {\n      const response = await axios.get(\"/verify-token\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      });\n      if (response.status === 200) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n        localStorage.removeItem(\"token\");\n      }\n    } catch (error) {\n      console.error(\"Token validation error\", error);\n      setIsLoggedIn(false);\n      localStorage.removeItem(\"token\");\n    }\n  };\n\n  if (props.id === \"login\") {\n    return (\n      <div className={`${styles.card} ${styles.nonBlurred}`}>\n        {props.children}\n      </div>\n    );\n  } else {\n    return (\n      <div\n        className={`${styles.card} ${\n          isLoggedIn ? styles.nonBlurred : styles.blurred\n        }`}\n      >\n        {props.children}\n      </div>\n    );\n  }\n};\n\nexport default Card;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,IAAI,CAAIC,KAAK,EAAK,CACtB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEnDD,SAAS,CAAC,IAAM,CACd;AACAU,kBAAkB,CAAC,CAAC,CAEpB;AACA,KAAM,CAAAC,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjCF,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,MAAM,CAAC,CAAE;AAEZ,MAAO,IAAMG,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAD,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,CAAC,eAAe,CAAE,CAChDC,OAAO,CAAE,CACPC,aAAa,WAAAC,MAAA,CAAYC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACxD,CACF,CAAC,CAAC,CACF,GAAIN,QAAQ,CAACO,MAAM,GAAK,GAAG,CAAE,CAC3BZ,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,IAAM,CACLA,aAAa,CAAC,KAAK,CAAC,CACpBU,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC,CAClC,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9Cd,aAAa,CAAC,KAAK,CAAC,CACpBU,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC,CAClC,CACF,CAAC,CAED,GAAIf,KAAK,CAACkB,EAAE,GAAK,OAAO,CAAE,CACxB,mBACEpB,IAAA,QAAKqB,SAAS,IAAAR,MAAA,CAAKf,MAAM,CAACwB,IAAI,MAAAT,MAAA,CAAIf,MAAM,CAACyB,UAAU,CAAG,CAAAC,QAAA,CACnDtB,KAAK,CAACsB,QAAQ,CACZ,CAAC,CAEV,CAAC,IAAM,CACL,mBACExB,IAAA,QACEqB,SAAS,IAAAR,MAAA,CAAKf,MAAM,CAACwB,IAAI,MAAAT,MAAA,CACvBV,UAAU,CAAGL,MAAM,CAACyB,UAAU,CAAGzB,MAAM,CAAC2B,OAAO,CAC9C,CAAAD,QAAA,CAEFtB,KAAK,CAACsB,QAAQ,CACZ,CAAC,CAEV,CACF,CAAC,CAED,cAAe,CAAAvB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}