{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[isLoggedIn,setIsLoggedIn]=useState(false);useEffect(()=>{const token=localStorage.getItem(\"token\");if(token){// 이후 5분마다 토큰 유효성 검사 반복\nconst interval=setInterval(()=>{verifyToken(token);},10000);// 5분마다\nreturn()=>clearInterval(interval);}},[]);const verifyToken=async token=>{try{await axios.get(\"/verify-token\",{headers:{Authorization:\"Bearer \".concat(token)}});setIsLoggedIn(true);// 토큰이 유효하면 로그인 상태로 설정\naxios.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(token);// 모든 요청에 토큰 설정\n}catch(error){console.error(\"Token verification failed:\",error);localStorage.removeItem(\"token\");// 토큰이 유효하지 않으면 제거\nsetIsLoggedIn(false);}};const login=token=>{localStorage.setItem(\"token\",token);setIsLoggedIn(true);axios.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(token);};const logout=()=>{localStorage.removeItem(\"token\");setIsLoggedIn(false);delete axios.defaults.headers.common[\"Authorization\"];};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn,login,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","interval","setInterval","verifyToken","clearInterval","get","headers","Authorization","concat","defaults","common","error","console","removeItem","login","setItem","logout","Provider","value","useAuth"],"sources":["/Users/tjwns3481/Desktop/workspace/autoSourcing/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      // 이후 5분마다 토큰 유효성 검사 반복\n      const interval = setInterval(() => {\n        verifyToken(token);\n      }, 10000); // 5분마다\n\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  const verifyToken = async (token) => {\n    try {\n      await axios.get(\"/verify-token\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setIsLoggedIn(true); // 토큰이 유효하면 로그인 상태로 설정\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`; // 모든 요청에 토큰 설정\n    } catch (error) {\n      console.error(\"Token verification failed:\", error);\n      localStorage.removeItem(\"token\"); // 토큰이 유효하지 않으면 제거\n      setIsLoggedIn(false);\n    }\n  };\n\n  const login = (token) => {\n    localStorage.setItem(\"token\", token);\n    setIsLoggedIn(true);\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false);\n    delete axios.defaults.headers.common[\"Authorization\"];\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAEnDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAIF,KAAK,CAAE,CACT;AACA,KAAM,CAAAG,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjCC,WAAW,CAACL,KAAK,CAAC,CACpB,CAAC,CAAE,KAAK,CAAC,CAAE;AAEX,MAAO,IAAMM,aAAa,CAACH,QAAQ,CAAC,CACtC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,WAAW,CAAG,KAAO,CAAAL,KAAK,EAAK,CACnC,GAAI,CACF,KAAM,CAAAT,KAAK,CAACgB,GAAG,CAAC,eAAe,CAAE,CAC/BC,OAAO,CAAE,CACPC,aAAa,WAAAC,MAAA,CAAYV,KAAK,CAChC,CACF,CAAC,CAAC,CACFD,aAAa,CAAC,IAAI,CAAC,CAAE;AACrBR,KAAK,CAACoB,QAAQ,CAACH,OAAO,CAACI,MAAM,CAAC,eAAe,CAAC,WAAAF,MAAA,CAAaV,KAAK,CAAE,CAAE;AACtE,CAAE,MAAOa,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDZ,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC,CAAE;AAClChB,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAAiB,KAAK,CAAIhB,KAAK,EAAK,CACvBC,YAAY,CAACgB,OAAO,CAAC,OAAO,CAAEjB,KAAK,CAAC,CACpCD,aAAa,CAAC,IAAI,CAAC,CACnBR,KAAK,CAACoB,QAAQ,CAACH,OAAO,CAACI,MAAM,CAAC,eAAe,CAAC,WAAAF,MAAA,CAAaV,KAAK,CAAE,CACpE,CAAC,CAED,KAAM,CAAAkB,MAAM,CAAGA,CAAA,GAAM,CACnBjB,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC,CAChChB,aAAa,CAAC,KAAK,CAAC,CACpB,MAAO,CAAAR,KAAK,CAACoB,QAAQ,CAACH,OAAO,CAACI,MAAM,CAAC,eAAe,CAAC,CACvD,CAAC,CAED,mBACEnB,IAAA,CAACC,WAAW,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAEtB,UAAU,CAAEkB,KAAK,CAAEE,MAAO,CAAE,CAAArB,QAAA,CACxDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAwB,OAAO,CAAGA,CAAA,GAAMjC,UAAU,CAACM,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}