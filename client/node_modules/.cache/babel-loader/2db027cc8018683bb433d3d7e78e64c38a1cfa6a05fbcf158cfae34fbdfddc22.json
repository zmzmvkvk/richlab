{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import styles from\"../css/Card.module.css\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const Card=props=>{const[isLoggedIn,setIsLoggedIn]=useState(false);useEffect(()=>{const interval=setInterval(()=>{checkTokenValidity();},5000);// 5분마다 토큰 유효성 검사, 실제로는 300000ms 사용 권장\nreturn()=>clearInterval(interval);},[]);const checkTokenValidity=async()=>{try{const response=await axios.get(\"/verify-token\",{headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))}});console.log(response.data.message);// \"Token is valid\"\nsetIsLoggedIn(true);}catch(error){console.error(\"Token validation error\",error.response);setIsLoggedIn(false);localStorage.removeItem(\"token\");// 로그인 상태가 유효하지 않으면 토큰 제거\n}};if(props.id===\"login\"){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.card,\" \").concat(styles.nonBlurred),children:props.children});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.card,\" \").concat(isLoggedIn?styles.nonBlurred:styles.blurred),children:props.children});}};export default Card;","map":{"version":3,"names":["React","useEffect","useState","styles","axios","jsx","_jsx","Card","props","isLoggedIn","setIsLoggedIn","interval","setInterval","checkTokenValidity","clearInterval","response","get","headers","Authorization","concat","localStorage","getItem","console","log","data","message","error","removeItem","id","className","card","nonBlurred","children","blurred"],"sources":["/Users/tjwns3481/Desktop/workspace/autoSourcing/client/src/components/Card.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"../css/Card.module.css\";\nimport axios from \"axios\";\n\nconst Card = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      checkTokenValidity();\n    }, 5000); // 5분마다 토큰 유효성 검사, 실제로는 300000ms 사용 권장\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const checkTokenValidity = async () => {\n    try {\n      const response = await axios.get(\"/verify-token\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      });\n      console.log(response.data.message); // \"Token is valid\"\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error(\"Token validation error\", error.response);\n      setIsLoggedIn(false);\n      localStorage.removeItem(\"token\"); // 로그인 상태가 유효하지 않으면 토큰 제거\n    }\n  };\n\n  if (props.id === \"login\") {\n    return (\n      <div className={`${styles.card} ${styles.nonBlurred}`}>\n        {props.children}\n      </div>\n    );\n  } else {\n    return (\n      <div\n        className={`${styles.card} ${\n          isLoggedIn ? styles.nonBlurred : styles.blurred\n        }`}\n      >\n        {props.children}\n      </div>\n    );\n  }\n};\n\nexport default Card;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAC3C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,IAAI,CAAIC,KAAK,EAAK,CACtB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEnDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjCC,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,IAAI,CAAC,CAAE;AAEV,MAAO,IAAMC,aAAa,CAACH,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,eAAe,CAAE,CAChDC,OAAO,CAAE,CACPC,aAAa,WAAAC,MAAA,CAAYC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACxD,CACF,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACS,IAAI,CAACC,OAAO,CAAC,CAAE;AACpCf,aAAa,CAAC,IAAI,CAAC,CACrB,CAAE,MAAOgB,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAACX,QAAQ,CAAC,CACvDL,aAAa,CAAC,KAAK,CAAC,CACpBU,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC,CAAE;AACpC,CACF,CAAC,CAED,GAAInB,KAAK,CAACoB,EAAE,GAAK,OAAO,CAAE,CACxB,mBACEtB,IAAA,QAAKuB,SAAS,IAAAV,MAAA,CAAKhB,MAAM,CAAC2B,IAAI,MAAAX,MAAA,CAAIhB,MAAM,CAAC4B,UAAU,CAAG,CAAAC,QAAA,CACnDxB,KAAK,CAACwB,QAAQ,CACZ,CAAC,CAEV,CAAC,IAAM,CACL,mBACE1B,IAAA,QACEuB,SAAS,IAAAV,MAAA,CAAKhB,MAAM,CAAC2B,IAAI,MAAAX,MAAA,CACvBV,UAAU,CAAGN,MAAM,CAAC4B,UAAU,CAAG5B,MAAM,CAAC8B,OAAO,CAC9C,CAAAD,QAAA,CAEFxB,KAAK,CAACwB,QAAQ,CACZ,CAAC,CAEV,CACF,CAAC,CAED,cAAe,CAAAzB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}